{ 
    "title": "JSON schema for BenchPress config file.",
    "$schema": "http://json-schema.org/schema#",
    "$id": "http://github.com/felixleopoldo/benchpress/config.schema",
    "type": "object",
    "properties":{
        "output_dir": {
            "description": "Directory for the generated files.",
            "type": "string"
        },
        "benchmark_setup":{
            "description": "Description of the benchmarking setup.",
            "type": "object",
            "properties": {
                "structure_learning_algorithms": {
                    "type":"array",
                    "uniqueItems": true
                },
                "models": {
                    "type":"array",
                    "items":{
                        "$ref": "#/definitions/sampled_model_dict"
                    }
                },
                "fixed_data":{
                    "type": "array",
                    "items":{
                        "$ref": "#/definitions/fixed_data_dict"
                    },
                    "uniqueItems": true
                },
                "data_sampling_algorithms":{
                    "type": "array"
                },
                "seed_range":{
                    "description": "Interval of seeds to simulate from.",
                    "type": "object",
                    "properties": {
                        "from":{
                            "description": "Start of seed interval",
                            "type":"integer"
                        },
                        "to":{
                            "description": "End of seed interval",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "data_sampling_algorithms":{
            "description": "Data sampling setup.",
            "type":"object",
            "properties": {
                "standard_sampling":{
                    "description": "List of standard_sampling setups.",
                    "type":"array",
                    "items":{
                        "$ref": "#/definitions/standard_sampling"
                    }
                }
            }
        },
        "graph_sampling_algorithms":{
            "description": "The graph samplings algorithms.",
            "type":"object",
            "properties": {
                "generateDAGMaxParents":{
                    "description": "List of generateDAGMaxParents instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/generateDAGMaxParents"
                    }
                }
            }
        },
        "parameters_sampling_algorithms":{
            "description": "The parameter sampling algorithms",
            "type": "object",
            "properties": {
                "generateBinaryBN":{
                    "description": "List of generateBinayBN instances",
                    "type":"array",
                    "items":{
                        "$ref": "#/definitions/generateBinaryBN"
                    }
                }
            }
        },
        "evaluation":{
            "description": "Setup for the evaluation procedure.",
            "type": "object"
        },
        "structure_learning_algorithms":{
            "description": "The structure learning algorithms",
            "type":"object",
            "properties": {
                "trilearn_loglin":{
                    "description": "List of trilearn_loglin instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/trilearn_loglin"
                    },
                    "uniqueItems": true
                },
                "blip":{
                    "description": "Blip instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/blip"
                    }
                },
                "gobnilp":{
                    "description": "Gobnilp instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/gobnilp"
                    }
                },
                "fges":{
                    "description": "fGES instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/fges"
                    }
                },
                "fci":{
                    "description": "FCI instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/fci"
                    }
                },
                "rfci":{
                    "description": "RFCI instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/rfci"
                    }
                },
                "gfci":{
                    "description": "GFCI instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/gfci"
                    }
                },

                "pcalg":{
                    "description": "PC algorithm instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/pcalg"
                    }
                },
                "mmhc":{
                    "description": "MMHC instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/mmhc"
                    }
                },
                "tabu":{
                    "description": "Tabu search instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/tabu"
                    }
                },
                "itsearch":{
                    "description": "Iterative +1 search instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/itsearch"
                    }
                },
                "order_mcmc":{
                    "description": "Order MCMC instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/order_mcmc"
                    }
                },
                "interiamb":{
                    "description": "Inter-IAMB instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/interiamb"
                    }
                },
                "gs":{
                    "description": "GS instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/interiamb"
                    }
                },
                "hc":{
                    "description": "HC instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/hc"
                    }
                },
                "h2pc":{
                    "description": "H2PC instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/h2pc"
                    }
                },
                "greenthomas":{
                    "description": "Green and Thomas instances",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/greenthomas"
                    }
                }
            },
            "additionalProperties": false

        }     
    },
    "required": ["output_dir", 
                "benchmark_setup", 
                "graph_sampling_algorithms",
                "parameters_sampling_algorithms",
                "evaluation",
                "structure_learning_algorithms"],
    "definitions":{
        "fixed_data_dict":{
            "type":"object",
            "properties": {
                "graph":{
                    "type":"string"
                },
                "data": {
                    "type":"string"
                }
            }
        },
        "sampled_model_dict":{
            "type":"object",
            "properties": {
                "graph":{
                    "type":"string"
                },
                "parameters": {
                    "type":"string"
                },
                "data": {
                    "type":"string"
                },
                "replicates" :{
                    "type": "array",
                    "items": {
                        "type":"integer"
                    }
                }
            }
        },
        "standard_sampling":{
            "description": "Sampling data from the multivariate distribution.",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sample_sizes":{
                    "description": "Sample sizes in simulation setup arranged in a list of list of sample sizes.",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/nonnegint"
                    }
                }
            },
            "required": ["id","sample_sizes"]
        },
        "generateDAGMaxParents":{
            "description": "An instance of generateDAGMaxParents",
            "type":"object",
            "properties": {
                "id":{
                    "type":"string"
                },
                "av_parent":{
                    "description":"Maximum average number of parents",                   
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/nonnegint"
                    }
                },
                "dims":{
                    "description": "Dimensions of the DAGs, a list of list of dimensions, matching the sample_sizes in the data setup.",
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/nonnegint"
                    }
                }
            },
            "required": ["av_parents", "dims"]
        },
        "generateBinaryBN":{
            "description": "Parameter setting for generateBinaryBN",
            "type":"object",
            "properties": {
                "id":{
                    "type":"string"
                },
                "min":{
                    "description": "Minimum probability",
                    "type":"number",
                    "minimum": 0,
                    "maximum": 1
                },
                "max":{
                    "description": "Maximum probability",
                    "type":"number",
                    "minimum": 0,
                    "maximum": 1
                }
            },
            "required": ["min", "max"]
        },
        "prob":{
            "type":"number",
            "minimum": 0,
            "maximum": 1
        },
        "natnum":{
            "description": "Natural number, (1,2,...)",
            "type":"integer",
            "minimum": 1
        },
        "nonnegint":{
            "description": "Non-negative integers, (0,1,2,...)",
            "type":"integer",
            "minimum": 0
        },
        "nonnegnum":{
            "description": "Non-negative floats",
            "type":"number",
            "minimum": 0
        },
        "flexnonnegnum":{
            "anyOf":[{"$ref": "#/definitions/nonnegnum"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/nonnegnum"}
                    }]
        },
        "flexnonnegnumnull":{
            "anyOf":[{"$ref": "#/definitions/nonnegnum"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/nonnegnum"}
                    },
                    {"type":"null"}]
        },
        "flexnonnegint":{
            "anyOf":[{"$ref": "#/definitions/nonnegint"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/nonnegint"}
                    }]
        },
        "flexnonnegintnull":{
            "anyOf":[{"$ref": "#/definitions/nonnegint"},
                     {"type":"array",
                        "items": {"$ref": "#/definitions/nonnegint"}},
                    {"type":"null"}]
        },
        "flexnatnum":{
            "anyOf":[{"$ref": "#/definitions/natnum"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/natnum"}
                    }]
        },
        "flexnatnumnull":{
            "anyOf":[{"$ref": "#/definitions/natnum"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/natnum"}
                    },
                     {"type":"null"}]
        },
        "flexprob":{
            "anyOf":[{"$ref": "#/definitions/prob"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/prob"}
                    }]
        },
        "flexprobnull":{
            "anyOf":[{"$ref": "#/definitions/prob"},
                     {"type":"array",
                      "items": {"$ref": "#/definitions/prob"}
                    },
                    {"type":"null"}]
        },
        "trilearn_loglin": {
            "description": "Parameter setting for trilearn.",
            "type":"object",
            "properties": {
                "id": {
                    "desciption":"Algorithm identifier",
                    "type":"string"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha": {
                    "$ref": "#/definitions/flexprob"          
                },
                "beta": {
                    "$ref": "#/definitions/flexprob"
                },
                "pseudo_obs": {
                    "$ref": "#/definitions/flexnonnegnum"
                },
                "radii": {
                    "$ref": "#/definitions/flexnonnegint"
                },
                "N": {
                    "$ref": "#/definitions/flexnatnum"
                },
                "M": {
                    "$ref": "#/definitions/flexnatnum"
                },
                "burnin": {
                    "$ref": "#/definitions/flexnonnegint"
                },
                "threshold": {
                    "$ref": "#/definitions/flexprob"
                }
            },
            "required": ["id", "plot_legend", "alpha", "beta", "radii", "N", "M", "pseudo_obs", "burnin", "threshold"]
        },
        "blip":{
            "description": "Blip instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                       "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "scorer.method":{
                    "type":"string"
                },
                "solver.method":{
                    "type":"string"
                },
                "indeg":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "time": {
                    "$ref": "#/definitions/flexnonnegnum"
                },
                "allocated":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "scorefunction":{
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                },
                "cores":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "verbose":{
                    "$ref": "#/definitions/nonnegint"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "scorer.method", "solver.method", "indeg",
                         "time", "allocated", "scorefunction", "alpha", "cores", "verbose"]
        },
        "gobnilp":{
            "description": "Gobnilp instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "plot":{
                    "type":"boolean"
                },
                "palim":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                },
                "prune":{
                    "type":"boolean"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "plot","palim", "alpha", "prune"]
        },
        "greenthomas":{
            "description": "Green & Thomas instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "n_samples":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "penalty":{
                    "$ref": "#/definitions/flexnonnegnum"
                },
                "randomits":{
                    "$ref": "#/definitions/flexnonnegint"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "n_samples","penalty", "randomits"]
        },
        "fges":{
            "description": "fGES instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },

                "faithfulnessAssumed":{
                    "type":"boolean"
                },
                "score":{
                    "type": "string"
                },
                "data-type":{
                    "type":"string"
                }
            },
            "additionalProperties": false,
            "required": ["id","plot_legend", "faithfulnessAssumed", 
                         "score", "data-type"]
        },
        "fci":{
            "description": "FCI instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                },
                "test":{
                    "type": "string"
                },
                "data-type":{
                    "type":"string"
                }
            },
            "additionalProperties": false,
            "required": ["id","plot_legend", "alpha", 
                         "test"]
        },
        "gfci":{
            "description": "GFCI instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                },
                "test":{
                    "type": "string"
                },
                "score":{
                    "type": "string"
                },
                "data-type":{
                    "type":"string"
                }
            },
            "additionalProperties": false,
            "required": ["id","plot_legend", "alpha", 
                         "test"]
        },        
        "rfci":{
            "description": "RFCI instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                },
                "test":{
                    "type": "string"
                },
                "data-type":{
                    "type":"string"
                }
            },
            "additionalProperties": false,
            "required": ["id","plot_legend", "alpha", 
                         "test"]
        },        

        "pcalg":{
            "description": "PC algorithm instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "alpha"]
        },
        "mmhc":{
            "description": "MMHC algorithm instance",
            "type":"object",
            "properties": {
                "id": {
                    "type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "restrict.args":{
                    "type":"object",
                    "properties": {
                    "alpha":{
                        "$ref": "#/definitions/flexprob"
                        }
                    },
                    "required": ["alpha"]
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "restrict.args"]
        },
        "h2pc":{
            "description": "H2PC algorithm instance",
            "type":"object",
            "properties": {
                "id": {
                    "type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "restrict.args":{
                    "type":"object",
                    "properties": {
                    "alpha":{
                        "$ref": "#/definitions/flexprob"
                        }
                    },
                    "required": ["alpha"]
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "restrict.args"]
        },

        "interiamb":{
            "description": "Inter-IAMB algorithm instance",
            "type":"object",
            "properties": {
                "id": {
                    "type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "alpha"]
        },
        "gs":{
            "description": "Grow shrink (GS) algorithm instance",
            "type":"object",
            "properties": {
                "id": {
                    "type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "alpha":{
                    "$ref": "#/definitions/flexprob"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "alpha"]
        },
        "tabu":{
            "description": "TABU algorithm instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "beta":{
                    "$ref": "#/definitions/flexnonnegnum"
                },
                "score":{
                    "type":"string"
                },
                "iss":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "iss.mu":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "l":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "k":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "prior":{
                    "type":"string"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "beta", "score", "iss", "iss.mu", "l", "k", "prior"]
        },
        "hc":{
            "description": "HC algorithm instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "perturb":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "restart":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "beta":{
                    "$ref": "#/definitions/flexnonnegnum"
                },
                "score":{
                    "type":"string"
                },
                "iss":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "iss.mu":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "l":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "k":{
                    "$ref": "#/definitions/flexnonnegint"
                },
                "prior":{
                    "type":"string"
                }
            },
            "additionalProperties": false,
            "required": ["id", "plot_legend", "beta", "score", "iss", "iss.mu", "l", "k", "prior", "perturb", "restart"]
        },

        "itsearch":{
            "description": "Iterative search +1 algorithm instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "optional": {
                    "description": "Algorithm parameters to show in plotting",
                    "type": "object",
                    "properties": {
                        "MAP":{
                            "type":"boolean"
                        },
                        "plus1it":{
                            "$ref": "#/definitions/flexnonnegintnull"
                        },
                        "posterior":{
                            "$ref": "#/definitions/flexprobnull"
                        },
                        "scoretype":{
                            "type":"string"
                        },
                        "chi":{
                            "$ref": "#/definitions/flexnonnegnumnull"
                        },
                        "edgepf":{
                            "$ref": "#/definitions/flexnonnegnumnull"
                        },
                        "am":{
                            "$ref": "#/definitions/flexnonnegnumnull"
                        },
                        "aw":{
                            "$ref": "#/definitions/flexnonnegnumnull"
                        }
                    },
                    "additionalProperties": false,
                    "required": ["MAP", "plus1it", "posterior", "scoretype", "chi", "edgepf", "am", "aw"]
                }
            }
        },
        "order_mcmc":{
            "description": "Order algorithm instance",
            "type":"object",
            "properties": {
                "id": {"type":"string",
                    "description":"Unique idenfifier"
                },
                "plot_legend": {
                    "description": "Legend to show in plotting",
                    "type": "string"
                },
                "startspace":{
                    "type":"string"
                },
                "optional":{
                    "type":"object",
                    "properties": {
                        "plus1":{
                            "type":"boolean"
                        }
                    },
                    "required": ["plus1"],
                    "additionalProperties": false
                },
                "scoretype":{
                    "type":"string"
                },
                "chi":{
                    "$ref": "#/definitions/flexnonnegnumnull"
                },
                "edgepf":{
                    "$ref": "#/definitions/flexnonnegnumnull"
                },
                "am":{
                    "$ref": "#/definitions/flexnonnegnumnull"
                },
                "aw":{
                    "$ref": "#/definitions/flexnonnegnumnull"
                },
                "threshold":{
                    "$ref": "#/definitions/flexprob"                    
                },
                "burnin":{
                    "$ref": "#/definitions/flexnonnegint"
                }
            },
            "additionalProperties": false,
            "required": ["scoretype", "chi", "edgepf", "am", "aw", "threshold", "burnin"]
        }
    },
    "additionalProperties": false
}
