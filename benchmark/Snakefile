
output_dir = "simresults"
replicates = [1, 2, 3]
itsearch_map = [0, 1]
blip_times = [10]
dim = [15]
sample_sizes = [30, 150]


singularity:
        "docker://onceltuca/graphical_model_benchmark:mytag"

rule sample_dag:
    output:
        "{output_dir}/dag_{replicate}.rds"
    shell:
        "Rscript scripts/sample_dags.R --filename {output} --nodes 20 --parents 2 --seed {wildcards.replicate}"

rule sample_bn:
    input:
        "{output_dir}/dag_{replicate}.rds"
    output:
        bn="{output_dir}/bn_{replicate}.rds"
    shell:
        "Rscript scripts/sample_bayesian_network_for_dag.R "
        "--filename_dag {input} "
        "--filename {output} --seed {wildcards.replicate} "

rule sample_data:
    input:
        "{output_dir}/bn_{replicate}.rds"
    output:
        "{output_dir}/data_{replicate}.csv"
    shell:
        "Rscript scripts/sample_data.R --filename {output} --filename_bn {input} --samples 200 --seed {wildcards.replicate}"

rule sim_blip:
    input: 
        dag="simresults/dag_{replicate}.rds",
        data="simresults/data_{replicate}.csv"
    output: 
        "simresults/ROC_blip_time_{blip_time}_{replicate}.csv"
    message: 
        "Executing blip algorithm on the following files: {input}."
    shell: 
        "Rscript scripts/run_blip.R --filename_data {input.data} "
        "--filename_dag {input.dag} "
        "--output_dir {output_dir} "
        "--replicate {wildcards.replicate} "
        "--max_time {wildcards.blip_time} "
        "--title blip" 

rule itsearch_sample:
    input: 
        # Maybe we should set title here?
        dag="simresults/dag_{replicate}.rds",
        data="simresults/data_{replicate}.csv"
    output: 
        "simresults/ROC_itsearch_sample_map_0_{replicate}.csv",
        "simresults/endspace_itsearch_sample_map_0_{replicate}.rds"
    message: 
        "Executing iterative search algorithm with MAP=FALSE on the following files: {input}"
    shell: 
        "Rscript scripts/run_iterative_search.R "
        "--filename_data {input.data} "
        "--filename_dag {input.dag} "
        "--output_dir {output_dir} "
        "--replicate {wildcards.replicate} "
        "--seed {wildcards.replicate} "
        "--map 0 "
        "--title itsearch_sample"
        # Maybe we should set title here? But it is so dependent on the parameters.
        # each combo should have a.

rule itsearch_map:
    input: 
        # Maybe we should set title here?
        dag="simresults/dag_{replicate}.rds",
        data="simresults/data_{replicate}.csv"
    output: 
        "simresults/ROC_itsearch_map_map_1_{replicate}.csv",
        "simresults/endspace_itsearch_map_map_1_{replicate}.rds"
    message: 
        "Executing iterative search algorithm with MAP=TRUE on the following files: {input}"
    shell: 
        "Rscript scripts/run_iterative_search.R "
        "--filename_data {input.data} "
        "--filename_dag {input.dag} "
        "--output_dir {output_dir} "
        "--replicate {wildcards.replicate} "
        "--seed {wildcards.replicate} "
        "--map 1 "
        "--title itsearch_map"
        # Maybe we should set title here? But it is so dependent on the parameters.
        # each combo should have a.

rule ordermcmc_itsearch_sample:
    input: 
        dag="simresults/dag_{replicate}.rds",
        data="simresults/data_{replicate}.csv",
        startspace="simresults/endspace_itsearch_sample_map_0_{replicate}.rds"
        # Fixa ordermcmc, ska kunna köras med olika startspace, inte bara från itsearch.
        # kanske bara att lägga till filename på startspace
    output: 
        "simresults/ROC_orderMCMC_sample_{replicate}_startspace_endspace_itsearch_sample_map_0_{replicate}.csv",
    message: 
        "Executing order mcmc algorithm with startspace on the following files: {input}."
    shell: # First check if results are in the database eg.
        "Rscript scripts/run_order_mcmc.R "
        "--filename_data {input.data} "
        "--filename_dag {input.dag} "
        "--filename_startspace {input.startspace} "
        "--output_dir {output_dir} "
        "--replicate {wildcards.replicate} "
        "--seed {wildcards.replicate} "
        "--title orderMCMC_sample"
        # Here we could save to database


rule ordermcmc_itsearch_map:
    input: 
        dag="simresults/dag_{replicate}.rds",
        data="simresults/data_{replicate}.csv",
        startspace="simresults/endspace_itsearch_map_map_1_{replicate}.rds"
        # Fixa ordermcmc, ska kunna köras med olika startspace, inte bara från itsearch.
        # kanske bara att lägga till filename på startspace
    output: 
        "simresults/ROC_orderMCMC_map_{replicate}_startspace_endspace_itsearch_map_map_1_{replicate}.csv",
    message: 
        "Executing order mcmc algorithm on the following files: {input}."
    shell: # First check if results are in the database eg.
        "Rscript scripts/run_order_mcmc.R "
        "--filename_data {input.data} "
        "--filename_dag {input.dag} "
        "--filename_startspace {input.startspace} "
        "--output_dir {output_dir} "
        "--replicate {wildcards.replicate} "
        "--seed {wildcards.replicate} "
        "--title orderMCMC_map"
        # Here we could save to database

rule pcalg:
    input:
        dag="simresults/dag_{replicate}.rds",
        data="simresults/data_{replicate}.csv",
    output:
        "{output_dir}/ROC_pcalg_alpha_{alpha}_{replicate}.csv"
    shell:
        "Rscript scripts/run_pcalg.R "
        "--filename_data {input.data} "
        "--filename_dag {input.dag} "
        "--alpha {wildcards.alpha} "
        "--output_dir {output_dir} "
        "--replicate {wildcards.replicate} "
        "--title pcalg"

# How to label the runs of interest?
# It seems weird that the input is the results filenames
# since this means that the labels must be in the filenames.

rule plot:
    input: 
        expand(output_dir + "/ROC_blip_time_{blip_time}_{replicate}.csv", 
               replicate=replicates, 
               blip_time=blip_times),
        expand(output_dir + "/ROC_itsearch_map_map_1_{replicate}.csv", 
               replicate=replicates),
        expand(output_dir + "/ROC_itsearch_sample_map_0_{replicate}.csv", 
               replicate=replicates),
        expand(output_dir + "/ROC_orderMCMC_sample_{replicate}_startspace_endspace_itsearch_sample_map_0_{replicate}.csv", 
               replicate=replicates),
        expand(output_dir + "/ROC_orderMCMC_map_{replicate}_startspace_endspace_itsearch_map_map_1_{replicate}.csv", 
               replicate=replicates),
        expand(output_dir + "/ROC_pcalg_alpha_{alpha}_{replicate}.csv", 
               replicate=replicates,
               alpha=[0.1])               
    output:
        "{output_dir}/ROC.eps"
    shell: 
        "Rscript scripts/plot_results.R --directory simresults --roc_files {input}"
        # Maybe I can maniputate or add the titles here, prior to plotting.
        # This sems to be the way to go, also for other parameters.
        # but then these files would be overwritten by other simulations.
        # Maybe they can be stored in a database.

# Maybe there could be just one rule for each type of run